<?php


/**
 * This class adds structure of 'employee' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue Mar 29 20:17:55 2011
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class EmployeeMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.EmployeeMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(EmployeePeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(EmployeePeer::TABLE_NAME);
		$tMap->setPhpName('Employee');
		$tMap->setClassname('Employee');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, null);

		$tMap->addColumn('FIRST_NAME', 'FirstName', 'VARCHAR', true, 255);

		$tMap->addColumn('LAST_NAME', 'LastName', 'VARCHAR', true, 255);

		$tMap->addColumn('MIDDLE', 'Middle', 'VARCHAR', false, 255);

		$tMap->addColumn('ADDRESS', 'Address', 'VARCHAR', false, 255);

		$tMap->addColumn('ADDRESS_2', 'Address2', 'VARCHAR', false, 255);

		$tMap->addColumn('CITY', 'City', 'VARCHAR', false, 255);

		$tMap->addColumn('STATE', 'State', 'VARCHAR', false, 255);

		$tMap->addColumn('ZIP', 'Zip', 'VARCHAR', false, 10);

		$tMap->addColumn('COUNTY', 'County', 'VARCHAR', false, 255);

		$tMap->addColumn('HOME_PHONE', 'HomePhone', 'VARCHAR', false, 255);

		$tMap->addColumn('CELL_PHONE', 'CellPhone', 'VARCHAR', false, 255);

		$tMap->addColumn('COMPANY_EMAIL', 'CompanyEmail', 'VARCHAR', false, 255);

		$tMap->addColumn('PERSONAL_EMAIL', 'PersonalEmail', 'VARCHAR', false, 255);

		$tMap->addColumn('LICENSE_NUMBER', 'LicenseNumber', 'VARCHAR', false, 255);

		$tMap->addColumn('LICENSE_EXPIRATION', 'LicenseExpiration', 'TIMESTAMP', false, null);

		$tMap->addColumn('DOB', 'Dob', 'TIMESTAMP', false, null);

		$tMap->addColumn('DOH', 'Doh', 'TIMESTAMP', false, null);

		$tMap->addColumn('DOF', 'Dof', 'TIMESTAMP', false, null);

		$tMap->addForeignKey('JOB_ID', 'JobId', 'INTEGER', 'job', 'ID', false, null);

		$tMap->addColumn('SSN', 'Ssn', 'VARCHAR', false, 255);

		$tMap->addColumn('HEALTH_INSURANCE', 'HealthInsurance', 'BOOLEAN', false, null);

		$tMap->addColumn('RETIREMENT_PLAN', 'RetirementPlan', 'BOOLEAN', false, null);

		$tMap->addColumn('SUPLIMENTAL_HEALTH', 'SuplimentalHealth', 'BOOLEAN', false, null);

		$tMap->addColumn('SUPPLEMENTAL_HEALTH_NOTES', 'SupplementalHealthNotes', 'VARCHAR', false, 255);

		$tMap->addColumn('HEALTH_TYPE', 'HealthType', 'VARCHAR', false, 255);

		$tMap->addColumn('PHYSICAL_DATE', 'PhysicalDate', 'TIMESTAMP', false, null);

		$tMap->addColumn('PHYSICAL_NOTES', 'PhysicalNotes', 'VARCHAR', false, 255);

		$tMap->addColumn('TB_DATE', 'TbDate', 'TIMESTAMP', false, null);

		$tMap->addColumn('TB_NOTES', 'TbNotes', 'VARCHAR', false, 255);

		$tMap->addColumn('OSHA_DATE', 'OshaDate', 'TIMESTAMP', false, null);

		$tMap->addColumn('CPR_DATE', 'CprDate', 'TIMESTAMP', false, null);

		$tMap->addColumn('FINGER_PRINTS', 'FingerPrints', 'BOOLEAN', false, null);

		$tMap->addColumn('FINGER_PRINT_NOTES', 'FingerPrintNotes', 'VARCHAR', false, 255);

		$tMap->addColumn('CLEARANCE', 'Clearance', 'BOOLEAN', false, null);

		$tMap->addColumn('CLEARANCE_NOTES', 'ClearanceNotes', 'VARCHAR', false, 255);

		$tMap->addColumn('PICTURE', 'Picture', 'VARCHAR', false, 255);

		$tMap->addColumn('NOTES', 'Notes', 'LONGVARCHAR', false, null);

		$tMap->addColumn('NPI', 'Npi', 'VARCHAR', false, 255);

		$tMap->addColumn('TC_TYPE', 'TcType', 'VARCHAR', false, 255);

		$tMap->addColumn('TC_EFFECTIVE', 'TcEffective', 'TIMESTAMP', false, null);

		$tMap->addColumn('TC_NUMBER', 'TcNumber', 'VARCHAR', false, 255);

		$tMap->addColumn('TC_EXP', 'TcExp', 'TIMESTAMP', false, null);

		$tMap->addColumn('HAS_KEYS', 'HasKeys', 'BOOLEAN', false, null);

		$tMap->addColumn('KEYS_RETURNED', 'KeysReturned', 'TIMESTAMP', false, null);

		$tMap->addColumn('HAS_EMAIL', 'HasEmail', 'BOOLEAN', false, null);

		$tMap->addColumn('EMAIL_REMOVED', 'EmailRemoved', 'TIMESTAMP', false, null);

		$tMap->addColumn('HAS_DIST_LIST', 'HasDistList', 'BOOLEAN', false, null);

		$tMap->addColumn('DIST_LIST_REMOVED', 'DistListRemoved', 'TIMESTAMP', false, null);

		$tMap->addColumn('HAS_SERVER_ACCESS', 'HasServerAccess', 'BOOLEAN', false, null);

		$tMap->addColumn('SERVER_REMOVED', 'ServerRemoved', 'TIMESTAMP', false, null);

		$tMap->addColumn('IS_TEAM_MEMBER', 'IsTeamMember', 'BOOLEAN', false, null);

	} // doBuild()

} // EmployeeMapBuilder
