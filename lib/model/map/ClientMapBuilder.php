<?php


/**
 * This class adds structure of 'client' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue Mar 29 20:17:55 2011
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class ClientMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.ClientMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(ClientPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(ClientPeer::TABLE_NAME);
		$tMap->setPhpName('Client');
		$tMap->setClassname('Client');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, null);

		$tMap->addColumn('FIRST_NAME', 'FirstName', 'VARCHAR', true, 255);

		$tMap->addColumn('LAST_NAME', 'LastName', 'VARCHAR', true, 255);

		$tMap->addColumn('DOB', 'Dob', 'TIMESTAMP', false, null);

		$tMap->addColumn('PARENT_FIRST', 'ParentFirst', 'VARCHAR', false, 255);

		$tMap->addColumn('PARENT_LAST', 'ParentLast', 'VARCHAR', false, 255);

		$tMap->addColumn('PARENT2_FIRST', 'Parent2First', 'VARCHAR', false, 255);

		$tMap->addColumn('PARENT2_LAST', 'Parent2Last', 'VARCHAR', false, 255);

		$tMap->addColumn('ADDRESS', 'Address', 'VARCHAR', false, 255);

		$tMap->addColumn('ADDRESS_2', 'Address2', 'VARCHAR', false, 255);

		$tMap->addColumn('CITY', 'City', 'VARCHAR', false, 255);

		$tMap->addColumn('STATE', 'State', 'VARCHAR', false, 255);

		$tMap->addColumn('ZIP', 'Zip', 'VARCHAR', false, 10);

		$tMap->addForeignKey('COUNTY_ID', 'CountyId', 'INTEGER', 'county', 'ID', false, null);

		$tMap->addForeignKey('DISTRICT_ID', 'DistrictId', 'INTEGER', 'district', 'ID', false, null);

		$tMap->addColumn('HOME_PHONE', 'HomePhone', 'VARCHAR', false, 255);

		$tMap->addColumn('WORK_PHONE', 'WorkPhone', 'VARCHAR', false, 255);

		$tMap->addColumn('CELL_PHONE', 'CellPhone', 'VARCHAR', false, 255);

		$tMap->addColumn('BLUE_CARD', 'BlueCard', 'BOOLEAN', false, null);

		$tMap->addColumn('IMMUNIZATIONS', 'Immunizations', 'BOOLEAN', false, null);

		$tMap->addColumn('WAITING_LIST', 'WaitingList', 'TIMESTAMP', false, null);

		$tMap->addColumn('IS_IEP', 'IsIep', 'BOOLEAN', false, null);

		$tMap->addColumn('PHYSICAL_EXP', 'PhysicalExp', 'TIMESTAMP', false, null);

		$tMap->addColumn('PEDIATRICIAN', 'Pediatrician', 'VARCHAR', false, 255);

		$tMap->addColumn('NOTES', 'Notes', 'LONGVARCHAR', false, null);

		$tMap->addForeignKey('SERVICE_COORDINATOR_ID', 'ServiceCoordinatorId', 'INTEGER', 'service_coordinator', 'ID', false, null);

		$tMap->addColumn('EXTERNAL_SERVICE', 'ExternalService', 'BOOLEAN', false, null);

		$tMap->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null);

		$tMap->addColumn('UPDATED_AT', 'UpdatedAt', 'TIMESTAMP', false, null);

	} // doBuild()

} // ClientMapBuilder
